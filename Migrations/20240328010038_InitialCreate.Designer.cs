// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAssignment3.Data;

#nullable disable

namespace WebAssignment3.Migrations
{
    [DbContext(typeof(WebAssignment3Context))]
    [Migration("20240328010038_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAssignment3.Data.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductIds")
                        .HasColumnType("int")
                        .HasColumnName("product_ids");

                    b.Property<string>("Quantities")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("quantities");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__cart__3213E83FC03D9464");

                    b.HasIndex("ProductIds");

                    b.HasIndex("UserId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("Text")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__comments__3213E83F1E718B74");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("PK__orders__3213E83F15802FAF");

                    b.HasIndex("CartId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<decimal?>("Pricing")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("pricing");

                    b.Property<decimal?>("ShippingCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shipping_cost");

                    b.HasKey("Id")
                        .HasName("PK__products__3213E83FD87EA57E");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PurchaseHistory")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("purchase_history");

                    b.Property<string>("ShippingAddress")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("shipping_address");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F534F33A0");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Cart", b =>
                {
                    b.HasOne("WebAssignment3.Data.Product", "ProductIdsNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("ProductIds")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_cart_product");

                    b.HasOne("WebAssignment3.Data.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_cart_user");

                    b.Navigation("ProductIdsNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAssignment3.Data.Comment", b =>
                {
                    b.HasOne("WebAssignment3.Data.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_comments_product");

                    b.HasOne("WebAssignment3.Data.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_comments_user");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAssignment3.Data.Order", b =>
                {
                    b.HasOne("WebAssignment3.Data.Cart", "Cart")
                        .WithMany("Orders")
                        .HasForeignKey("CartId")
                        .HasConstraintName("FK_orders_cart");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("WebAssignment3.Data.Cart", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebAssignment3.Data.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("WebAssignment3.Data.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
